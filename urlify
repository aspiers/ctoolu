#! /usr/bin/env ruby
require 'rubygems'
require 'dbus'
require 'gtk2'

$patterns = [
            {
              "name" => "BNC",
              "pattern" => /bnc ?#?(\d+)/i,
              "url" => "https://bugzilla.novell.com/show_bug.cgi?id=%s",
            },
            {
              "name" => "FATE",
              "pattern" => /fate ?#?(\d+)/i,
              "url" => "https://features.opensuse.org/%s",
            },
           ]
print $patterns.to_yaml

def clipboard_changed(text)
  $patterns.each do |hash|
    match_data = hash["pattern"].match(text)
    if match_data
      puts hash["name"]
      url_menu(hash["url"] % match_data.captures)
    end
  end
end

def url_copy(url)
  $clipboard.Set url
end

# http://ruby-gnome2.sourceforge.jp/hiki.cgi?Gtk%3A%3AMenu
def url_menu(url)
  menu = Gtk::Menu.new

  open = Gtk::MenuItem.new("_Open #{url}")
  open.signal_connect("activate") do
    system "xdg-open", url
  end
  menu.append open

  copy = Gtk::MenuItem.new("_Copy #{url}")
  copy.signal_connect("activate") do
    url_copy url
  end  
  menu.append copy

  menu.append Gtk::MenuItem.new(nil) # separator
  menu.append Gtk::MenuItem.new("_Nothing")

  menu.show_all

  parent_shell = parent_item = nil
  mouse_button = 1
  activation_time = 0           # Time.now.to_i did not work
  menu.popup(parent_shell, parent_item, mouse_button, activation_time)
end

bus = DBus::SessionBus.instance

clipboard_relay_svc = bus["net.vidner.ClipboardRelay"]
clipboard = clipboard_relay_svc.object "/net/vidner/ClipboardRelay/Clipboard"
clipboard.introspect
clipboard.default_iface = "net.vidner.ClipboardRelay"
clipboard.on_signal("Changed") { |text| clipboard_changed(text) }
$clipboard = clipboard

bus.glibize
Gtk.main
