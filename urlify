#! /usr/bin/env ruby
require 'rubygems'
require 'dbus'
require 'gtk2'

KlipperAction = Struct.new :label, :pattern, :commands

class KlipperCommand < Struct.new :label, :command, :keep_output
  def execute(captures)
    # TODO honor keep_output
    substituted = command % captures
    system substituted
  end
end

$actions = YAML.load_file "actions.yaml"

def clipboard_changed(text)
  # how to deal with multiple matches? warn but do only one
  $actions.each do |action|
    match_data = action.pattern.match(text)
    if match_data
      match_menu action, match_data.captures
    end
  end
end

def url_copy(url)
  $clipboard.Set url
end

# http://ruby-gnome2.sourceforge.jp/hiki.cgi?Gtk%3A%3AMenu
def match_menu(action, captures)
  menu = Gtk::Menu.new
  menu.append Gtk::MenuItem.new(action.label)
  menu.append Gtk::MenuItem.new(nil) # separator
  
  action.commands.each do |command|
    item = Gtk::MenuItem.new(command.label)
    item.signal_connect("activate") do
      command.execute captures
    end
    menu.append item
  end

  menu.show_all

  parent_shell = parent_item = nil
  mouse_button = 1
  activation_time = 0           # Time.now.to_i did not work
  menu.popup(parent_shell, parent_item, mouse_button, activation_time)
end

bus = DBus::SessionBus.instance

clipboard_relay_svc = bus["net.vidner.ClipboardRelay"]
clipboard = clipboard_relay_svc.object "/net/vidner/ClipboardRelay/Clipboard"
clipboard.introspect
# FIXME there is no ProxyObject#interfacce
# FIXME ProxyObjectInterface#on_signal does not mimic ProxyObject#on_signal
clipboard.default_iface = "net.vidner.ClipboardRelay"
clipboard.on_signal("Changed") { |text| clipboard_changed(text) }
$clipboard = clipboard

bus.glibize
Gtk.main
