#! /usr/bin/env ruby
# relays Clipboard and Primary changes over DBus
require 'rubygems'
require 'dbus'
require 'gtk2'

class ClipboardRelay < DBus::Object
  def initialize(path, gtk_id)
    super(path)
    @last_text = nil
    @gtk_clipboard = Gtk::Clipboard.get(gtk_id)
    @gtk_clipboard.signal_connect("owner-change") do |clipboard, event|
      owner_change(clipboard)
    end
    @gtk_clipboard.request_text { |clipboard, text| got_text(text) }
  end

  def owner_change(a_clipboard)
    a_clipboard.request_text { |clipboard, text| got_text(text) }
  end

  def got_text(text)
    return if text.nil?         # clipboard is not textual
    return if text == @last_text
    self.Changed(text)
    @last_text = text
  end

  dbus_interface "net.vidner.ClipboardRelay" do
    dbus_method :Set, "in text:s" do |text|
      @gtk_clipboard.text = text
    end

    dbus_method :Get, "out text:s" do
      [@last_text]
    end

    dbus_signal :Changed, "text:s"
  end
end

bus = DBus::SessionBus.instance
bus.glibize

clipboard = ClipboardRelay.new("/net/vidner/ClipboardRelay/Clipboard",
                               Gdk::Atom.intern("CLIPBOARD"))
primary   = ClipboardRelay.new("/net/vidner/ClipboardRelay/Primary",
                               Gdk::Atom.intern("PRIMARY"))

service = bus.request_service "net.vidner.ClipboardRelay"
service.export clipboard
service.export primary
Gtk.main
